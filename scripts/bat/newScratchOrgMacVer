 #!/bin/bash

# Oppretter scratch org
(set -x; sf org create scratch --definition-file config/project-scratch-def.json --alias $1 --duration-days $2 --set-default --json --wait 30 2>/dev/null)

PACKAGES=( 
    "crm-platform-base:0.263.0"
    "crm-platform-access-control:0.146.0"
    "crm-shared-flowComponents:0.4.0"
    "crm-henvendelse-base:0.31.0"
    "crm-platform-integration:0.153.0"
    "crm-platform-oppgave:0.63.0"
    "crm-community-base:0.119.0"
    "crm-platform-reporting:0.39.0"
    "crm-journal-utilities:0.43.0"
    "crm-shared-user-notification:0.24.0"
    "crm-henvendelse:0.165.0"
    "crm-thread-view:0.5.0"
    "crm-shared-timeline:1.29.0"
)

for package in "${PACKAGES[@]}" ; do
    packageName=${package%%:*}
    ver=${package#*:}
    beta=$(echo $ver | grep '[0-9]{1,4}\.[0-9]{1,4}\.[0-9]{1,4}\.[0-9]{1,4}' --extended-regexp --only-matching)
    if [[ -z "$beta" ]]
    then 
        packageId=$(sf package version list --packages "$packageName" --released --concise 2>/dev/null | grep $ver | grep '04t[a-zA-Z0-9]{15}' --only-matching --extended-regexp)
    else
        packageId=$(sf package version list --packages "$packageName" 2>/dev/null | grep $ver | grep '04t[a-zA-Z0-9]{15}' --only-matching --extended-regexp)
    fi
    if [[ -z "$packageId" ]]
    then
        echo "can't find packageId for $packageName $ver"
    else
        echo "Installng $packageName $ver $packageId:"
        (set -x; sf package install --package $packageId --no-prompt --installation-key $3 --wait 30 --publish-wait 30 2>/dev/null)
    fi
done

set -x
# Dytt kildekoden til scratch org'en
sf project deploy start 2>/dev/null

# Tildeler permissionset
sf org assign permset --name HOT_Servicetjenesten_Admin 2>/dev/null

# Opprett testdata
sf apex run --file scripts/apex/createTestData.apex 2>/dev/null

# done